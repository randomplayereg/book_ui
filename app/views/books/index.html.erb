
<h1>All books</h1>

<div style='margin-left: 30px; margin-right: 30px;'>

</div>

<div class="dropdown" style='margin-left: 30px; margin-right: 30px'>
  <a href="/books/new" class="btn btn-primary" role="button" aria-pressed="true"><strong>+</strong> Add new book</a>
  <a href="#" class="btn btn-primary dropdown-toggle" data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false">Sort by: <span class="caret"></span></a>
  <ul class="dropdown-menu">
    <li id='change-sort-by-title'><a href="#">Title</a></li>
    <li id='change-sort-by-newest'><a href="#">Newest</a></li>
    <li id='change-sort-by-oldest'><a href="#">Oldest</a></li>
    <li role="separator" class="divider"></li>
    <li role="separator" class="divider"></li>
  </ul>
</div>

<div>
  <p id='test'></p>
</div>

<div style='margin-left: 30px; margin-right: 30px'>
  <nav aria-label="Page navigation example">
    <ul id="paginate-container"class="pagination">
    </ul>
  </nav>
</div>

<div id='dvData'>
  <table id="books_table">
  </table>
</div>

<button id="btnExport"> EXPORT TO EXCEL FILE </button>
<iframe id="txtArea1" style="display:none"></iframe>

<script>

  var the_data;
  function call_delete(the_id){
    if (confirm('Are you sure you want to burn this book, mastah?')) {
      $.ajax({
        type: "DELETE",
        url: api_url + "books/" + the_id,
        headers: {
          "access-token": localStorage.getItem("access-token"),
          "client":       localStorage.getItem("client"),
          "uid":          localStorage.getItem("uid"),
          "expiry":       localStorage.getItem("expiry")
        },
        success: function(){
          $('#card_' + the_id).fadeOut();
        },
        error: function(){
          alert(data.responseText);
        }
      });
    };
  }

  function setSortParam(attr){
    if (localStorage.getItem("sort_attr") != attr){
      localStorage.setItem("sort_dir", "ASC");
    } else if (localStorage.getItem("sort_dir") == "ASC"){
      localStorage.setItem("sort_dir", "DESC");
    }
    else{
      localStorage.setItem("sort_dir", "ASC");
    }

    localStorage.setItem("sort_attr", attr);

    ajax_GetTable();
  };

  function ajax_GetAllBooks(admin_session){
    $('#books_table').empty();

    $.ajax({
      type: "GET",
      url: api_url + "books",
      dataType: "json",
      data: {
        sort_params: {
          attr: localStorage.getItem("sort_attr"),
          direction: localStorage.getItem("sort_dir")
        },
        filter_params: {
          attr: "",
          operator: "=",
          value: ""
        },
        page: getCookie("page")
      },
      success: function(data){
        console.log(data);
        var count = 1;
        var big_fragment = '';
        $.each(data, function() {
          var actions_function = "<td onclick='call_delete(" + this.id + ")'><a>Delete</a></td>"
                               + "<td><a href='/books/edit/" + this.id + "'>Edit</a></td>";
          var buttonForAdmin = "";
          if (admin_session == true){
            buttonForAdmin = actions_function;
          };

          if (getCookie("page") != "") {
            var offset = parseInt(getCookie("page")) - 1;
            var numpos = offset * 5 + count++;
          };          
          big_fragment = big_fragment
                        + "<tr>"
                        +   "<td>" + numpos + "</td>"
                        +   "<td>" + "<a href=/books/show/" + this.id + ">" + this.title + "</a>" + "</td>"
                        +   "<td>" + this.author + "</td>"
                        +   "<td>" + this.member.email + "</td>"
                        +   "<td>" + moment(this.created_at).fromNow() + "</td>"
                        +   "<td>" + moment(this.updated_at).fromNow() + "</td>"
                        +   buttonForAdmin
                      +   "</tr>";
        });
        var add_actions_column = "<th colspan='2'>ADMIN ACTIONS</th>";
        var admin_col = "";
        if (admin_session) admin_col = add_actions_column;
        var headers = "<tr>"
                      + "<th>ID</th>"
                      + "<th>Title" + "<button " + "onclick=" + "setSortParam(" + "'" + "title" + "'" + ")" + ">v</button>" + "</th>"
                      + "<th>Author" + "<button " + "onclick=" + "setSortParam(" + "'" + "author" + "'" + ")" + ">v</button>" + "</th>"
                      // + "<th>Created by" + "<button " + "onclick=" + "setSortParam(" + "'" + "member" + "'" + ")" + ">v</button>" + "</th>"
                      + "<th>Created by</th>"
                      + "<th>Created at" + "<button " + "onclick=" + "setSortParam(" + "'" + "created_at" + "'" + ")" + ">v</button>" + "</th>"
                      + "<th>Updated at" + "<button " + "onclick=" + "setSortParam(" + "'" + "updated_at" + "'" + ")" + ">v</button>" + "</th>"
                      + admin_col
                    + "</tr>";
        $('#books_table').fadeOut('fast', function() {
            $('#books_table').empty();
            $('#books_table').fadeIn('fast', function(){
              $('#books_table').html(headers + big_fragment);
            });
        });
      }
    });
  }

  function ajax_GetTable(){
    if (localStorage.getItem("access-token") != null){
      $.ajax({
        url: api_url + "members/check_admin",
        headers: {
          "access-token": localStorage.getItem("access-token"),
          "client":       localStorage.getItem("client"),
          "uid":          localStorage.getItem("uid"),
          "expiry":       localStorage.getItem("expiry")
        },
        type: "GET",
        dataType: "json",
        success: function(data){
          console.log("admin_session");
          ajax_GetAllBooks(data.admin); // with login
        },
        error: function(data){
        }
      });
    } else {
      ajax_GetAllBooks(false); // no login
    }

  }

  function change_page_cookie(changeto){
    // cookie relevant
    if (getCookie("page") == changeto){
      $('#pagination_' + getCookie("page")).removeClass('disabled');
    };
    setCookie("page", changeto, 1);
    $('#pagination_' + changeto).addClass('disabled');

    ajax_GetTable();
  };

  $('document').ready(function(){

    // set default sort-by value when calling ajax to server to get books
    $('#change-sort-by-title').click(function(e){
      localStorage.setItem("sort_by", "title");
    });
    $('#change-sort-by-newest').click(function(e){
      localStorage.setItem("sort_by", "newest");
    });
    $('#change-sort-by-oldest').click(function(e){
      localStorage.setItem("sort_by", "oldest");
    });

    $.ajax({
      url: api_url + "books/total",
      type: "GET",
      dataType: "json",
      success: function(data){

        $('#paginate-container').empty();
        var total_books = data.total;
        var total_pages = Math.floor((total_books - 1) / 5) + 1;
        var fragment = "";
        for (i = 0; i < total_pages; i++){
          fragment += "<li id='pagination_" + (i+1) + "' class='page-item'><a class='page-link' href='#" + (i+1) + "'>" + (i+1) + "</a></li>";
        };
        $('#paginate-container').append(fragment);

        var url = window.location.href; // "http:/localhost3001/books/all#2" or "http:/localhost3001/books/all#"
        if (url.lastIndexOf("#") != -1) {
          var pageNum = url.substring(url.lastIndexOf("#") + 1, url.length); //"2" or ""
          if (pageNum == "")
            change_page_cookie("1");
          else
            change_page_cookie(pageNum);
          console.log("pageNum: " + pageNum);
        }
        else {
          var pageNum = "1";
          console.log("pageNum: " + pageNum);
          change_page_cookie(pageNum);
        }
      }
    });

    $('#btnExport').click(function(event) {
      event.preventDefault();
      window.location = api_url + "books/xls";
    });
  });

</script>
